{
  "version": 3,
  "file": "angular-vertical-tabs.umd.min.js",
  "sources": [
    "ng://angular-vertical-tabs/out/app/tabs/tabs.service.ts",
    "ng://angular-vertical-tabs/out/app/tabs/tab.component.ts",
    "ng://angular-vertical-tabs/out/app/tabs/dynamic-tab-anchor.directive.ts",
    "ng://angular-vertical-tabs/out/app/tabs/tabs.component.ts",
    "ng://angular-vertical-tabs/out/app/tabs/tabs.module.ts"
  ],
  "sourcesContent": [
    "import { Injectable } from '@angular/core';\n\n@Injectable()\nexport class TabsService {\n  multi: boolean;\n  selectedOptions: string[];\n\n  constructor() {\n    this.selectedOptions = [];\n  }\n}\n",
    "import { Component, Input } from '@angular/core';\n\nimport { TabsService } from './tabs.service';\n\n@Component({\n  selector: 'vertical-tab',\n  styles: [\n    `\n    .pane {\n      padding: 1em;\n    }\n  `\n  ],\n  template: `<div *ngIf=\"active\" class=\"pane\">\n  <h3 *ngIf=\"tabsService.multi && tabsService.selectedOptions.length > 1\">{{tabTitle}}</h3>\n  <ng-content></ng-content>\n  <ng-container *ngIf=\"template\"\n                [ngTemplateOutlet]=\"template\"\n                [ngTemplateOutletContext]=\"{person: dataContext}\">\n  </ng-container>\n</div>\n`\n})\nexport class TabComponent {\n  constructor(public tabsService: TabsService)  {\n  }\n\n  @Input() tabTitle: string;\n  @Input() active = false;\n  @Input() template;\n  @Input() dataContext;\n  @Input() isCloseable = false;\n}\n",
    "import { Directive, ViewContainerRef } from '@angular/core';\n\n@Directive({\n  selector: '[dynamicTabAnchor]'\n})\nexport class DynamicTabAnchorDirective {\n  constructor(public viewContainer: ViewContainerRef) {\n  }\n}\n",
    "import {\n  AfterContentInit,\n  Component,\n  ComponentFactoryResolver,\n  ContentChildren,\n  Input,\n  QueryList,\n  ViewChild\n} from '@angular/core';\nimport { MatSelectionList } from '@angular/material';\n\nimport { TabComponent } from './tab.component';\nimport { DynamicTabAnchorDirective } from './dynamic-tab-anchor.directive';\nimport { TabsService } from './tabs.service';\n\n@Component({\n  selector: 'vertical-tabs',\n  template: `<div fxLayout=\"row\" fxLayoutGap=\"1px\" fxLayout.xs=\"column\">\n  <div fxFlex=\"33%\">\n    <mat-selection-list #list [(ngModel)]=\"tabService.selectedOptions\"\n                        (ngModelChange)=\"onNgModelChange($event)\"\n                        (selectionChange)=\"onNgModelChange($event)\">\n      <mat-list-option *ngFor=\"let tab of [].concat(tabs._results, dynamicTabs)\" [value]=\"tab.tabTitle\">\n        {{tab.tabTitle}}\n      </mat-list-option>\n    </mat-selection-list>\n    <mat-divider></mat-divider>\n    <button mat-button color=\"primary\" id=\"select_all\"\n            (click)=\"list.selectAll()\" *ngIf=\"showSelectAll\">\n      Select all\n    </button>\n  </div>\n\n  <div fxFlex=\"66%\" *ngIf=\"tabService.selectedOptions.length\">\n    <ng-content></ng-content>\n    <ng-template dynamicTabAnchor #container></ng-template>\n  </div>\n</div>\n`\n})\nexport class TabsComponent implements AfterContentInit {\n  @ContentChildren(TabComponent) tabs: QueryList<TabComponent>;\n  @ViewChild(DynamicTabAnchorDirective)\n  dynamicTabPlaceholder: DynamicTabAnchorDirective;\n\n  @ViewChild(MatSelectionList) list: MatSelectionList;\n\n  @Input() multi = true;\n  @Input() selectFirstTab = true;\n  @Input() showSelectAll = false;\n\n  dynamicTabs: TabComponent[] = [];\n\n  lastSelectedOptions: string[];\n\n  constructor(private componentFactoryResolver: ComponentFactoryResolver,\n              public tabService: TabsService) {\n    this.tabService.multi = this.multi;\n  }\n\n  // contentChildren are set\n  ngAfterContentInit() {\n    // if there is no active tab set, activate the first\n    if (this.selectFirstTab && !this.tabs.filter(tab => tab.active).length)\n      this.selectTab(this.tabs.first);\n  }\n\n  private toggleTabActivations() {\n    const arr: TabComponent[] = this.tabs.toArray().concat(this.dynamicTabs);\n    if (arr == null || arr.length < 1) return;\n    const s = new Set(this.tabService.selectedOptions);\n    arr.forEach(tab => tab.active = s.has(tab.tabTitle));\n  }\n\n  private setOptions() {\n    if (this.multi || !this.tabService.selectedOptions.length ||\n      !this.lastSelectedOptions || !this.lastSelectedOptions.length)\n      return;\n\n    this.tabService.selectedOptions = this.tabService.selectedOptions.filter(\n      tabTitle => tabTitle !== this.lastSelectedOptions[this.lastSelectedOptions.length - 1]\n    );\n\n    this.lastSelectedOptions = this.tabService.selectedOptions;\n  }\n\n  onNgModelChange(/*selected: string[]*/) {\n    this.setOptions();\n    this.toggleTabActivations();\n  }\n\n  selectTab(tab: TabComponent) {\n    this.multi ?\n      this.tabService.selectedOptions.push(tab.tabTitle)\n      : this.tabService.selectedOptions = [tab.tabTitle];\n    tab.active = true;\n\n    if (!this.list.options) return;\n\n    const options = this.list.options.map(t => t.value);\n    const s = new Set(this.tabService.selectedOptions);\n    this.list.options.forEach(t => {\n      t.selected = s.has(t.value);\n      // console.info(`'${t.value}' selected:`, t.selected);\n    });\n\n    const options_set = new Set(options);\n    this.tabService.selectedOptions.forEach(option => {\n      if (!options_set.has(option))\n        throw TypeError(`'${option}' not found in mat-selection-list`);\n    });\n\n  }\n\n  openTab(title: string, template, data, isCloseable = false) {\n    const componentFactory = this.componentFactoryResolver.resolveComponentFactory(\n      TabComponent\n    );\n\n    // create a component instance\n    const componentRef = this.dynamicTabPlaceholder.viewContainer.createComponent(componentFactory);\n\n    // set the according properties on our component instance\n    const instance: TabComponent = componentRef.instance as TabComponent;\n    instance.tabTitle = title;\n    instance.template = template;\n    instance.dataContext = data;\n    instance.isCloseable = isCloseable;\n    instance.active = true;\n\n    this.dynamicTabs.push(instance);\n\n    this.selectTab(this.dynamicTabs[this.dynamicTabs.length - 1]);\n  }\n\n\n  closeTab(tab: TabComponent) {\n    for (let i = 0; i < this.dynamicTabs.length; i++) {\n      if (this.dynamicTabs[i] === tab) {\n        this.dynamicTabs.splice(i, 1);\n\n        this.dynamicTabPlaceholder.viewContainer.remove(i);\n        this.tabService.selectedOptions = [tab.tabTitle];  // TODO: duplicate handling\n        this.selectTab(this.tabs.first);\n        break;\n      }\n    }\n  }\n\n  closeActiveTab() {\n    if (this.multi) console.warn('Closing the first active tab');\n    const activeTab = this.dynamicTabs.filter(tab => tab.active);\n    if (activeTab.length > 0) this.closeTab(activeTab[0]);\n  }\n}\n",
    "import { ModuleWithProviders, NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { MatButtonModule, MatDividerModule, MatListModule } from '@angular/material';\nimport { FlexLayoutModule } from '@angular/flex-layout';\n\nimport { TabsComponent } from './tabs.component';\nimport { TabComponent } from './tab.component';\nimport { DynamicTabAnchorDirective } from './dynamic-tab-anchor.directive';\nimport { TabsService } from './tabs.service';\n\n\n@NgModule({\n  imports: [\n    CommonModule, FormsModule,\n    FlexLayoutModule,\n    MatListModule, MatDividerModule, MatButtonModule\n  ],\n  declarations: [TabsComponent, TabComponent, DynamicTabAnchorDirective],\n  // providers: [TabsService],\n  exports: [TabsComponent, TabComponent],\n  entryComponents: [TabComponent]\n})\nexport class TabsModule {\n  public static forRoot(): ModuleWithProviders {\n    return {ngModule: TabsModule, providers: [TabsService]};\n  }\n}\n"
  ],
  "names": [
    "TabsService",
    "this",
    "selectedOptions",
    "type",
    "Injectable",
    "TabComponent",
    "tabsService",
    "active",
    "isCloseable",
    "Component",
    "args",
    "selector",
    "styles",
    "template",
    "tabTitle",
    "Input",
    "dataContext",
    "DynamicTabAnchorDirective",
    "viewContainer",
    "Directive",
    "ViewContainerRef",
    "TabsComponent",
    "componentFactoryResolver",
    "tabService",
    "multi",
    "selectFirstTab",
    "showSelectAll",
    "dynamicTabs",
    "prototype",
    "ngAfterContentInit",
    "tabs",
    "filter",
    "tab",
    "length",
    "selectTab",
    "first",
    "toggleTabActivations",
    "arr",
    "toArray",
    "concat",
    "s",
    "Set",
    "forEach",
    "has",
    "setOptions",
    "_this",
    "lastSelectedOptions",
    "onNgModelChange",
    "push",
    "list",
    "options",
    "map",
    "t",
    "value",
    "selected",
    "options_set",
    "option",
    "TypeError",
    "openTab",
    "title",
    "data",
    "componentFactory",
    "resolveComponentFactory",
    "instance",
    "dynamicTabPlaceholder",
    "createComponent",
    "closeTab",
    "i",
    "splice",
    "remove",
    "closeActiveTab",
    "console",
    "warn",
    "activeTab",
    "ComponentFactoryResolver",
    "ContentChildren",
    "ViewChild",
    "MatSelectionList",
    "TabsModule",
    "forRoot",
    "ngModule",
    "providers",
    "NgModule",
    "imports",
    "CommonModule",
    "FormsModule",
    "FlexLayoutModule",
    "MatListModule",
    "MatDividerModule",
    "MatButtonModule",
    "declarations",
    "exports",
    "entryComponents"
  ],
  "mappings": "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"
}
