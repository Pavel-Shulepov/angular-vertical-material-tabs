!function(t,e){"object"==typeof exports&&"undefined"!=typeof module?e(exports,require("@angular/core"),require("@angular/material"),require("@angular/common"),require("@angular/forms"),require("@angular/flex-layout")):"function"==typeof define&&define.amd?define("angular-vertical-tabs",["exports","@angular/core","@angular/material","@angular/common","@angular/forms","@angular/flex-layout"],e):e(t["angular-vertical-tabs"]={},t.ng.core,t.ng.material,t.ng.common,t.ng.forms,t.ng["flex-layout"])}(this,function(t,e,n,i,a,o){"use strict";var s=function(){this.selectedOptions=[]};s.decorators=[{type:e.Injectable}],s.ctorParameters=function(){return[]};var r=function(t){this.tabsService=t,this.active=!1,this.isCloseable=!1};r.decorators=[{type:e.Component,args:[{selector:"vertical-tab",styles:["\n    .pane {\n      padding: 1em;\n    }\n  "],template:'<div *ngIf="active" class="pane">\n  <h3 *ngIf="tabsService.multi && tabsService.selectedOptions.length > 1">{{tabTitle}}</h3>\n  <ng-content></ng-content>\n  <ng-container *ngIf="template"\n                [ngTemplateOutlet]="template"\n                [ngTemplateOutletContext]="{person: dataContext}">\n  </ng-container>\n</div>\n'}]}],r.ctorParameters=function(){return[{type:s}]},r.propDecorators={tabTitle:[{type:e.Input}],active:[{type:e.Input}],template:[{type:e.Input}],dataContext:[{type:e.Input}],isCloseable:[{type:e.Input}]};var l=function(t){this.viewContainer=t};l.decorators=[{type:e.Directive,args:[{selector:"[dynamicTabAnchor]"}]}],l.ctorParameters=function(){return[{type:e.ViewContainerRef}]};var c=function(){function t(t,e){this.componentFactoryResolver=t,this.tabService=e,this.multi=!0,this.selectFirstTab=!0,this.showSelectAll=!1,this.dynamicTabs=[],this.tabService.multi=this.multi}return t.prototype.ngAfterContentInit=function(){this.selectFirstTab&&!this.tabs.filter(function(t){return t.active}).length&&this.selectTab(this.tabs.first)},t.prototype.toggleTabActivations=function(){var t=this.tabs.toArray().concat(this.dynamicTabs);if(!(null==t||t.length<1)){var e=new Set(this.tabService.selectedOptions);t.forEach(function(t){return t.active=e.has(t.tabTitle)})}},t.prototype.setOptions=function(){var e=this;!this.multi&&this.tabService.selectedOptions.length&&this.lastSelectedOptions&&this.lastSelectedOptions.length&&(this.tabService.selectedOptions=this.tabService.selectedOptions.filter(function(t){return t!==e.lastSelectedOptions[e.lastSelectedOptions.length-1]}),this.lastSelectedOptions=this.tabService.selectedOptions)},t.prototype.onNgModelChange=function(){this.setOptions(),this.toggleTabActivations()},t.prototype.selectTab=function(t){if(this.multi?this.tabService.selectedOptions.push(t.tabTitle):this.tabService.selectedOptions=[t.tabTitle],t.active=!0,this.list.options){var e=this.list.options.map(function(t){return t.value}),n=new Set(this.tabService.selectedOptions);this.list.options.forEach(function(t){t.selected=n.has(t.value)});var i=new Set(e);this.tabService.selectedOptions.forEach(function(t){if(!i.has(t))throw TypeError("'"+t+"' not found in mat-selection-list")})}},t.prototype.openTab=function(t,e,n,i){void 0===i&&(i=!1);var a=this.componentFactoryResolver.resolveComponentFactory(r),o=this.dynamicTabPlaceholder.viewContainer.createComponent(a).instance;o.tabTitle=t,o.template=e,o.dataContext=n,o.isCloseable=i,o.active=!0,this.dynamicTabs.push(o),this.selectTab(this.dynamicTabs[this.dynamicTabs.length-1])},t.prototype.closeTab=function(t){for(var e=0;e<this.dynamicTabs.length;e++)if(this.dynamicTabs[e]===t){this.dynamicTabs.splice(e,1),this.dynamicTabPlaceholder.viewContainer.remove(e),this.tabService.selectedOptions=[t.tabTitle],this.selectTab(this.tabs.first);break}},t.prototype.closeActiveTab=function(){this.multi&&console.warn("Closing the first active tab");var t=this.dynamicTabs.filter(function(t){return t.active});0<t.length&&this.closeTab(t[0])},t}();c.decorators=[{type:e.Component,args:[{selector:"vertical-tabs",template:'<div fxLayout="row" fxLayoutGap="1px" fxLayout.xs="column">\n  <div fxFlex="33%">\n    <mat-selection-list #list [(ngModel)]="tabService.selectedOptions"\n                        (ngModelChange)="onNgModelChange($event)"\n                        (selectionChange)="onNgModelChange($event)">\n      <mat-list-option *ngFor="let tab of [].concat(tabs._results, dynamicTabs)" [value]="tab.tabTitle">\n        {{tab.tabTitle}}\n      </mat-list-option>\n    </mat-selection-list>\n    <mat-divider></mat-divider>\n    <button mat-button color="primary" id="select_all"\n            (click)="list.selectAll()" *ngIf="showSelectAll">\n      Select all\n    </button>\n  </div>\n\n  <div fxFlex="66%" *ngIf="tabService.selectedOptions.length">\n    <ng-content></ng-content>\n    <ng-template dynamicTabAnchor #container></ng-template>\n  </div>\n</div>\n'}]}],c.ctorParameters=function(){return[{type:e.ComponentFactoryResolver},{type:s}]},c.propDecorators={tabs:[{type:e.ContentChildren,args:[r]}],dynamicTabPlaceholder:[{type:e.ViewChild,args:[l]}],list:[{type:e.ViewChild,args:[n.MatSelectionList]}],multi:[{type:e.Input}],selectFirstTab:[{type:e.Input}],showSelectAll:[{type:e.Input}]};var p=function(){};p.decorators=[{type:e.NgModule,args:[{imports:[i.CommonModule,a.FormsModule,o.FlexLayoutModule,n.MatListModule,n.MatDividerModule,n.MatButtonModule],declarations:[c,r,l],providers:[s],exports:[c,r],entryComponents:[r]}]}],t.TabsComponent=c,t.TabComponent=r,t.TabsModule=p,t.ɵb=l,t.ɵa=s,Object.defineProperty(t,"__esModule",{value:!0})});
//# sourceMappingURL=angular-vertical-tabs.umd.min.js.map
