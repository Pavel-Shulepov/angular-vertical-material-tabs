{"version":3,"sources":["ng://vertical-tabs/lib/vertical-tabs.service.ts","ng://vertical-tabs/lib/dynamic-tab-anchor.directive.ts","ng://vertical-tabs/lib/vertical-tab.component.ts","ng://vertical-tabs/lib/vertical-tabs.component.ts","ng://vertical-tabs/lib/vertical-tabs.module.ts"],"names":["VerticalTabsService","this","selectedOptions","Injectable","args","providedIn","DynamicTabAnchorDirective","viewContainer","Directive","selector","ViewContainerRef","VerticalTabComponent","tabsService","Component","template","styles","Input","VerticalTabsComponent","componentFactoryResolver","tabService","multi","prototype","ngAfterContentInit","selectFirstTab","tabs","filter","tab","active","length","selectTab","first","checkSelectAll","toggleTabActivations","arr","toArray","concat","dynamicTabs","s","Set","forEach","has","tabTitle","setOptions","lastSelectedOptions","_this","onNgModelChange","console","info","push","list","options","map","t","value","selected","options_set","option","TypeError","allSelected","reduce","p","c","openTab","title","data","isCloseable","componentFactory","resolveComponentFactory","instance","dynamicTabPlaceholder","createComponent","dataContext","closeTab","i","splice","remove","closeActiveTab","warn","activeTab","toggleSelect","deselectAll","selectAll","ComponentFactoryResolver","ContentChildren","ViewChild","MatSelectionList","VerticalTabsModule","forRoot","ngModule","providers","NgModule","imports","CommonModule","FormsModule","FlexLayoutModule","MatListModule","MatDividerModule","MatButtonModule","entryComponents","declarations","exports"],"mappings":"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","sourcesContent":["import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class VerticalTabsService {\n  multi: boolean;\n  selectedOptions: string[];\n\n  constructor() {\n    this.selectedOptions = [];\n  }\n}\n","import { Directive, ViewContainerRef } from '@angular/core';\n\n@Directive({\n  selector: '[verticalDynamicTabAnchor]'\n})\nexport class DynamicTabAnchorDirective {\n  constructor(public viewContainer: ViewContainerRef) {\n  }\n}\n","import { Component, Input } from '@angular/core';\nimport { VerticalTabsService } from './vertical-tabs.service';\n\n\n@Component({\n  selector: 'ng-vertical-tab',\n  template: `<div *ngIf=\"active\" class=\"pane\">\n  <h3 class=\"tab-heading\" *ngIf=\"tabsService.multi && tabsService.selectedOptions.length > 1\">\n    {{tabTitle}}\n  </h3>\n  <ng-content></ng-content>\n  <ng-container *ngIf=\"template\"\n                [ngTemplateOutlet]=\"template\"\n                [ngTemplateOutletContext]=\"{person: dataContext}\">\n  </ng-container>\n</div>\n`,\n  styles: [`\n    .pane {\n      padding: 1em;\n    }\n  `]\n})\nexport class VerticalTabComponent {\n  constructor(public tabsService: VerticalTabsService) {\n  }\n\n  @Input() tabTitle: string;\n  @Input() active = false;\n  @Input() template;\n  @Input() dataContext;\n  @Input() isCloseable = false;\n}\n","import { AfterContentInit, Component, ComponentFactoryResolver, ContentChildren, Input, QueryList, ViewChild } from '@angular/core';\nimport { MatSelectionList } from '@angular/material';\n\nimport { DynamicTabAnchorDirective } from './dynamic-tab-anchor.directive';\nimport { VerticalTabComponent } from './vertical-tab.component';\nimport { VerticalTabsService } from './vertical-tabs.service';\n\n@Component({\n  selector: 'ng-vertical-tabs',\n  template: `<div fxLayout=\"row\" fxLayoutGap=\"1px\" fxLayout.xs=\"column\">\n  <div fxFlex=\"33%\">\n    <mat-selection-list #list [(ngModel)]=\"tabService.selectedOptions\"\n                        (ngModelChange)=\"onNgModelChange()\">\n      <mat-list-option *ngFor=\"let tab of [].concat(tabs.toArray(), dynamicTabs)\" [value]=\"tab.tabTitle\">\n        {{tab.tabTitle}}\n      </mat-list-option>\n    </mat-selection-list>\n    <mat-divider></mat-divider>\n    <button mat-button color=\"primary\" id=\"select\"\n            (click)=\"toggleSelect()\" *ngIf=\"showSelectAll\">\n      {{allSelected ? 'Reset selection' : 'Select all'}}\n    </button>\n  </div>\n\n  <div fxFlex=\"66%\" *ngIf=\"tabService.selectedOptions.length\">\n    <ng-content></ng-content>\n    <ng-template verticalDynamicTabAnchor #container></ng-template>\n  </div>\n</div>\n`,\n  styles: []\n})\nexport class VerticalTabsComponent implements AfterContentInit {\n  @ContentChildren(VerticalTabComponent) tabs: QueryList<VerticalTabComponent>;\n  @ViewChild(DynamicTabAnchorDirective) dynamicTabPlaceholder: DynamicTabAnchorDirective;\n\n  @ViewChild(MatSelectionList) list: MatSelectionList;\n\n  @Input() multi = true;\n  @Input() selectFirstTab = true;\n  @Input() showSelectAll = false;\n  allSelected = true;\n\n  dynamicTabs: VerticalTabComponent[] = [];\n\n  lastSelectedOptions: string[];\n\n  constructor(private componentFactoryResolver: ComponentFactoryResolver,\n              public tabService: VerticalTabsService) {\n    this.tabService.multi = this.multi;\n  }\n\n  // contentChildren are set\n  ngAfterContentInit() {\n    // if there is no active tab set, activate the first\n    if (this.selectFirstTab && !this.tabs.filter(tab => tab.active).length)\n      this.selectTab(this.tabs.first);\n    else this.checkSelectAll();\n  }\n\n  private toggleTabActivations() {\n    const arr: VerticalTabComponent[] = this.tabs.toArray().concat(this.dynamicTabs);\n    if (arr == null || arr.length < 1) return;\n    const s = new Set(this.tabService.selectedOptions);\n    arr.forEach(tab => tab.active = s.has(tab.tabTitle));\n  }\n\n  private setOptions() {\n    if (this.multi || !this.tabService.selectedOptions.length ||\n      !this.lastSelectedOptions || !this.lastSelectedOptions.length)\n      return;\n\n    this.tabService.selectedOptions = this.tabService.selectedOptions.filter(\n      tabTitle => tabTitle !== this.lastSelectedOptions[this.lastSelectedOptions.length - 1]\n    );\n\n    this.lastSelectedOptions = this.tabService.selectedOptions;\n  }\n\n  onNgModelChange(/*selected: string[]*/) {\n    console.info('this.tabService.selectedOptions:', this.tabService.selectedOptions, ';');\n    this.setOptions();\n    this.toggleTabActivations();\n    this.checkSelectAll();\n  }\n\n  selectTab(tab: VerticalTabComponent) {\n    this.multi ?\n      this.tabService.selectedOptions.push(tab.tabTitle)\n      : this.tabService.selectedOptions = [tab.tabTitle];\n    tab.active = true;\n\n    if (!this.list.options) return;\n\n    const options = this.list.options.map(t => t.value);\n    const s = new Set(this.tabService.selectedOptions);\n    this.list.options.forEach(t => {\n      t.selected = s.has(t.value);\n      // console.info(`'${t.value}' selected:`, t.selected);\n    });\n\n    const options_set = new Set(options);\n    this.tabService.selectedOptions.forEach(option => {\n      if (!options_set.has(option))\n        throw TypeError(`'${option}' not found in mat-selection-list`);\n    });\n\n    this.checkSelectAll();\n  }\n\n  private checkSelectAll() {\n    if (!this.list || !this.list.options) return;\n    this.allSelected = this.list.options.length < 1 ? false\n      : this.list.options.reduce((p, c) => p ? c.selected : p, true);\n  }\n\n  openTab(title: string, template, data, isCloseable = false) {\n    const componentFactory = this.componentFactoryResolver.resolveComponentFactory(\n      VerticalTabComponent\n    );\n\n    // create a component instance\n    const componentRef = this.dynamicTabPlaceholder.viewContainer.createComponent(componentFactory);\n\n    // set the according properties on our component instance\n    const instance: VerticalTabComponent = componentRef.instance as VerticalTabComponent;\n    instance.tabTitle = title;\n    instance.template = template;\n    instance.dataContext = data;\n    instance.isCloseable = isCloseable;\n    instance.active = true;\n\n    this.dynamicTabs.push(instance);\n    this.selectTab(this.dynamicTabs[this.dynamicTabs.length - 1]);\n  }\n\n\n  closeTab(tab: VerticalTabComponent) {\n    for (let i = 0; i < this.dynamicTabs.length; i++) {\n      if (this.dynamicTabs[i] === tab) {\n        this.dynamicTabs.splice(i, 1);\n\n        this.dynamicTabPlaceholder.viewContainer.remove(i);\n        this.tabService.selectedOptions = [tab.tabTitle];  // TODO: duplicate handling\n        this.selectTab(this.tabs.first);\n        break;\n      }\n    }\n    this.checkSelectAll();\n  }\n\n  closeActiveTab() {\n    if (this.multi) console.warn('Closing the first active tab');\n    const activeTab = this.dynamicTabs.filter(tab => tab.active);\n    if (activeTab.length > 0) this.closeTab(activeTab[0]);\n    this.checkSelectAll();\n  }\n\n  toggleSelect() {\n    this.allSelected ? this.list.deselectAll() : this.list.selectAll();\n    this.allSelected = !this.allSelected;\n    this.checkSelectAll();\n  }\n}\n","import { ModuleWithProviders, NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { CommonModule } from '@angular/common';\n\nimport { MatButtonModule, MatDividerModule, MatListModule } from '@angular/material';\n\nimport { FlexLayoutModule } from '@angular/flex-layout';\n\nimport { VerticalTabsComponent } from './vertical-tabs.component';\nimport { VerticalTabComponent } from './vertical-tab.component';\nimport { DynamicTabAnchorDirective } from './dynamic-tab-anchor.directive';\nimport { VerticalTabsService } from './vertical-tabs.service';\n\n\n@NgModule({\n  imports: [\n    CommonModule, FormsModule,\n    FlexLayoutModule,\n    MatListModule, MatDividerModule, MatButtonModule\n  ],\n  entryComponents: [VerticalTabComponent],\n  declarations: [DynamicTabAnchorDirective, VerticalTabComponent, VerticalTabsComponent],\n  exports: [VerticalTabComponent, VerticalTabsComponent]\n})\nexport class VerticalTabsModule {\n  public static forRoot(): ModuleWithProviders {\n    return { ngModule: VerticalTabsModule, providers: [VerticalTabsService] };\n  }\n}\n"]}